% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/elastic_qr.R
\name{elastic_qr}
\alias{elastic_qr}
\title{Solving Elastic Net Regularized Quantile Regression}
\usage{
elastic_qr(
  x,
  y,
  kappa = 0.5,
  lam1 = 0.1,
  lam2 = 0.1,
  max_iter = 1000,
  tol = 1e-05,
  shrink = TRUE,
  verbose = 0
)
}
\arguments{
\item{x}{The data matrix \eqn{X=(x_1,\ldots,x_n)^T} of size
\eqn{n\times d}{n * d}, representing \eqn{n} observations
and \eqn{d} features.}

\item{y}{The length-\eqn{n} response vector.}

\item{kappa}{Parameter of the check loss.}

\item{lam1, lam2}{Weights of lasso and ridge penalties, respectively.}

\item{max_iter}{Maximum number of iterations.}

\item{tol}{Tolerance parameter for convergence test.}

\item{shrink}{Whether to use the shrinkage algorithm.}

\item{verbose}{Level of verbosity.}
}
\value{
A list of the following components:
\item{beta}{Optimized value of the \eqn{\beta} vector.}
\item{xi,Lambda,Gamma}{Values of dual variables.}
\item{niter}{Number of iterations used.}
\item{dual_objfns}{Dual objective function values during the optimization process.}
}
\description{
This function solves the elastic net regularized quantile regression
(ElasticQR) of the following form:
\deqn{
\min_{\beta}\ \frac{1}{n}\sum_{i=1}^n \rho_\kappa(y_i-x_i^T \beta_{1:d}-\beta_{d+1})+
\lambda_1\Vert \beta \Vert_1 + \frac{\lambda_2}{2}\Vert \beta \Vert_2^2
}
where \eqn{\rho_\kappa(u)=u\cdot(\kappa-I(u<0))}{\rho_\kappa(u)=u*(\kappa-I(u<0))} is the check loss,
\eqn{\beta\in\mathbb{R}^{d+1}}{\beta} is a length-\eqn{(d+1)} vector,
\eqn{x_i\in\mathbb{R}^d}{x_i} is the feature vector for the \eqn{i}-th observation,
\eqn{y_i\in\mathbb{R}}{y_i} is the \eqn{i}-th response variable value,
and \eqn{\lambda_1,\lambda_2>0} are weights of lasso and ridge penalties,
respectively.
}
\examples{
# Simulate data
set.seed(123)
n = 5000
d = 100
x = matrix(rnorm(n * d), n, d)
beta0 = rnorm(d)
y = c(x \%*\% beta0) + rnorm(n, sd = 0.1)
lam1 = 0.01
lam2 = 0.01

# Fit elastic net regularized quantile regression
res = elastic_qr(x, y, kappa = kappa, lam1 = lam1, lam2 = lam2,
                 max_iter = 1000, tol = 1e-5)
bhat = res$beta

# Compare with the true beta
plot(beta0, bhat[1:d])
abline(0, 1, col = "red")
}
\author{
Yixuan Qiu \url{https://statr.me}

        Ben Dai \url{https://bendai.org}
}
